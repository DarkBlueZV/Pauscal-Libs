<Datos><Nombre></Nombre><Icono>AA==</Icono><Version><Mayor>0</Mayor><Menor>0</Menor><Revision>0</Revision><AutoIncr>0</AutoIncr></Version><Info/><Contenido>Importar "Convertir.prp"

$24ADV-

Const FASM_OK 			 = 0	' FASM_STATE points to output
Const FASM_WORKING			 = 1
Const FASM_ERROR			 = 2	' FASM_STATE contains error code
Const FASM_INVALID_PARAMETER		 = -1
Const FASM_OUT_OF_MEMORY		 = -2
Const FASM_STACK_OVERFLOW		 = -3
Const FASM_SOURCE_NOT_FOUND		 = -4
Const FASM_UNEXPECTED_END_OF_SOURCE	 = -5
Const FASM_CANNOT_GENERATE_CODE	 = -6
Const FASM_FORMAT_LIMITATIONS_EXCEDDED = -7
Const FASM_WRITE_FAILED		 = -8
Const FASMERR_FILE_NOT_FOUND			    = -101
Const FASMERR_ERROR_READING_FILE		    = -102
Const FASMERR_INVALID_FILE_FORMAT		    = -103
Const FASMERR_INVALID_MACRO_ARGUMENTS 	    = -104
Const FASMERR_INCOMPLETE_MACRO		    = -105
Const FASMERR_UNEXPECTED_CHARACTERS		    = -106
Const FASMERR_INVALID_ARGUMENT		    = -107
Const FASMERR_ILLEGAL_INSTRUCTION		    = -108
Const FASMERR_INVALID_OPERAND 		    = -109
Const FASMERR_INVALID_OPERAND_SIZE		    = -110
Const FASMERR_OPERAND_SIZE_NOT_SPECIFIED	    = -111
Const FASMERR_OPERAND_SIZES_DO_NOT_MATCH	    = -112
Const FASMERR_INVALID_ADDRESS_SIZE		    = -113
Const FASMERR_ADDRESS_SIZES_DO_NOT_AGREE	    = -114
Const FASMERR_DISALLOWED_COMBINATION_OF_REGISTERS = -115
Const FASMERR_LONG_IMMEDIATE_NOT_ENCODABLE	    = -116
Const FASMERR_RELATIVE_JUMP_OUT_OF_RANGE	    = -117
Const FASMERR_INVALID_EXPRESSION		    = -118
Const FASMERR_INVALID_ADDRESS 		    = -119
Const FASMERR_INVALID_VALUE			    = -120
Const FASMERR_VALUE_OUT_OF_RANGE		    = -121
Const FASMERR_UNDEFINED_SYMBOL		    = -122
Const FASMERR_INVALID_USE_OF_SYMBOL		    = -123
Const FASMERR_NAME_TOO_LONG			    = -124
Const FASMERR_INVALID_NAME			    = -125
Const FASMERR_RESERVED_WORD_USED_AS_SYMBOL	    = -126
Const FASMERR_SYMBOL_ALREADY_DEFINED		    = -127
Const FASMERR_MISSING_END_QUOTE		    = -128
Const FASMERR_MISSING_END_DIRECTIVE		    = -129
Const FASMERR_UNEXPECTED_INSTRUCTION		    = -130
Const FASMERR_EXTRA_CHARACTERS_ON_LINE	    = -131
Const FASMERR_SECTION_NOT_ALIGNED_ENOUGH	    = -132
Const FASMERR_SETTING_ALREADY_SPECIFIED	    = -133
Const FASMERR_DATA_ALREADY_DEFINED		    = -134
Const FASMERR_TOO_MANY_REPEATS		    = -135
Const FASMERR_SYMBOL_OUT_OF_SCOPE		    = -136
Const FASMERR_USER_ERROR			    = -140
Const FASMERR_ASSERTION_FAILED		    = -141

Uni$F3n FASM_DATA1,_
		output_length,_ ' Cantidad de opcodes.
		error_code:Entero ' C$F3digo de error.

Uni$F3n FASM_DATA2,_
		output_data,_ ' Puntero a los opcodes.
		error_line:Entero ' L$EDnea de error.

Uni$F3n FASM_DATA3,_
		file_offset,_
		macro_calling_line:Entero

Estruc FASM_STATE,_ ' Estructura que obtiene los offsets / Opcodes.
		 condition:Entero,_
		 a:FASM_DATA1,_ ' Uni$F3n #1
		 b:FASM_DATA2   ' Uni$F3n #2

Estruc FASM_LINE_HEADER,_
		 file_path,_
		 line_number:Entero,_
		 c:FASM_DATA3,_
		 macro_line:Entero
		 
'Privado:
'	Proc CopyMemory(,,:Entero),"Kernel32" "RtlMoveMemory"
'P$FAblico:

Proc fasm_Assemble(Referencia:Cadena,,,,:Entero):Entero, "FASM.dll"
Proc fasm_GetVersion:Entero, "FASM.dll"
Proc fasm_AssembleFile(Referencia:Cadena,,,,:Entero):Entero, "FASM.dll"

Prototipo FASM_ASSEMBLERPROTOTYPE:Entero ' Prototipo para ejecutar el c$F3digo ensamblador.

' Parametro 1: C$F3digo FASM.
' Parametro 2: Variable que recibe el c$F3digo de error.
' Notas: si se produce un error y el segundo parametro no es establecido, se produce un error al acceder en memoria.
Proc ProcesarASM(Referencia C$F3digo:Cadena,Opcional Referencia ValErr:Entero,Opcional ObtOffsets:Booleano,Opcional Referencia Offsets:Cadena):Byte[]
	Var STATE:FASM_STATE,ERROR:FASM_LINE_HEADER,Temp[]:Byte,Chk:Entero
	ReDim Temp,10000 ' Rellenamos el buffer.
	Chk = fasm_Assemble(C$F3digo,Temp[0]@,10000,100,0)
	Si Chk = 0 Entonces
		CopyMemory(STATE@,Temp[0]@,Long(STATE)) ' Rellenamos la estructura con el puntero obtenido.
		CopyMemory(Temp[0]@,STATE.b.output_data,STATE.a.output_length) ' Rellenamos el buffer con los datos correctos.
		ReDim Preservar Temp,STATE.a.output_length ' Re-Dimencionamos el buffer a la longitud adecuada.
		Resultado = Temp
		Si ObtOffsets
			'ReDim Offsets,STATE.a.output_length
			Contar Chk = 0 a (STATE.a.output_length - 1)
				Offsets = Offsets + EntHex(Temp[Chk]) + " "
			Seguir
			'Mensaje(Offsets)
			Offsets = Izquierda(Offsets,CadLong(Offsets) - 1)
		FinSi
	SiNo
	AdmErr ' Si la variable no fue establecida y se produce un error.
		' No hacer nada.
		' Es irrelevante.
		CopyMemory(STATE@,Temp[0]@,Long(STATE)) ' Rellenamos la estructura con el puntero obtenido.
		CopyMemory(ERROR@,STATE.b.error_line,Long(ERROR))
		' Se establece en cero el primer offset para que el programador sepa que se produjo un error.
		' El segundo offset es la l$EDnea que produjo el error.
		' El tercer offse es el offset que produjo el error.
		ValErr = (&gt;Chk = 2?STATE.a.error_code:Chk)
		Resultado = [0,ERROR.line_number,ERROR.c.file_offset]
	Controlar
		ValErr = (&gt;Chk = 2?STATE.a.error_code:Chk)
		Resultado = [0,0,0]
	FinAdmErr
	FinSi
	Borrar Temp
FinProc

Proc ProcesarASMError(Err:Entero):Cadena
	Seleccionar Err
		Caso 0
			Devolver "Exito."
		Caso 1
			Devolver "Trabajando..."
		Caso 2
			Devolver "Error."
		Caso -1
			Devolver "Parametro invalido."
		Caso -2
			Devolver "Fuera de memoria."
		Caso -3
			Devolver "Desbordamiento de pila."
		Caso -4
			Devolver "Source no encontrado."
		Caso -5
			Devolver "Fin del archivo inesperado."
		Caso -6
			Devolver "Imposible generar c$F3digo."
		Caso -7
			Devolver "Limitaciones de formato excedidos."
		Caso -8
			Devolver "Escritura fallida."
		Caso FASMERR_FILE_NOT_FOUND
			Devolver "Archivo no encontrado."
		Caso FASMERR_ERROR_READING_FILE
			Devolver  "Error al leer el archivo."
		Caso FASMERR_INVALID_FILE_FORMAT
			Devolver  "El formato del archivo es invalido."
		Caso FASMERR_INVALID_MACRO_ARGUMENTS
			Devolver "Argumentos del macro invalidos."
		Caso FASMERR_INCOMPLETE_MACRO
			Devolver "Macro incompleto."
		Caso FASMERR_UNEXPECTED_CHARACTERS
			Devolver "Caracteres inesperados."
		Caso FASMERR_INVALID_ARGUMENT
			Devolver "Argumento invalido."
		Caso FASMERR_ILLEGAL_INSTRUCTION
			Devolver "Instrucci$F3n ilegal."
		Caso FASMERR_INVALID_OPERAND
			Devolver "Operando invalido."
		Caso FASMERR_INVALID_OPERAND_SIZE
			Devolver "Tama$F1o invalido del operando."
		Caso FASMERR_OPERAND_SIZE_NOT_SPECIFIED
			Devolver "Tama$F1o del operando no especificado."
		Caso FASMERR_OPERAND_SIZES_DO_NOT_MATCH
			Devolver "Tama$F1o del operando no encontrado."
		Caso FASMERR_INVALID_ADDRESS_SIZE
			Devolver "Tama$F1o de la direcci$F3n no valido."
		Caso FASMERR_ADDRESS_SIZES_DO_NOT_AGREE
			Devolver "Tama$F1o de direcci$F3n no aceptado."
		Caso FASMERR_DISALLOWED_COMBINATION_OF_REGISTERS
			Devolver "Combinaci$F3n de los registros no permitido."
		Caso FASMERR_LONG_IMMEDIATE_NOT_ENCODABLE
			Devolver "Immediate largo no codificable."
		Caso FASMERR_RELATIVE_JUMP_OUT_OF_RANGE
			Devolver "Salto relativo fuera de rango."
		Caso FASMERR_INVALID_EXPRESSION
			Devolver "Expresi$F3n invalida."
		Caso FASMERR_INVALID_ADDRESS
			Devolver "Direcci$F3n invalida."
		Caso FASMERR_INVALID_VALUE
			Devolver "Valor invalido"
		Caso FASMERR_VALUE_OUT_OF_RANGE
			Devolver "Valor fuera de rango."
		Caso FASMERR_UNDEFINED_SYMBOL
			Devolver "Simbolo indefinido."
		Caso FASMERR_INVALID_USE_OF_SYMBOL
			Devolver "Uso invalido del simbolo."
		Caso FASMERR_NAME_TOO_LONG
			Devolver "Nombre demaciado largo."
		Caso FASMERR_INVALID_NAME
			Devolver "Nombre invalido."
		Caso FASMERR_RESERVED_WORD_USED_AS_SYMBOL
			Devolver "Palabra reservada utilizada como s$EDmbolo."
		Caso FASMERR_SYMBOL_ALREADY_DEFINED
			Devolver "Simbolo ya definido."
		Caso FASMERR_MISSING_END_QUOTE
			Devolver "Falta fin de la etiqueta."
		Caso FASMERR_MISSING_END_DIRECTIVE
			Devolver "Falta fin del directivo."
		Caso FASMERR_UNEXPECTED_INSTRUCTION
			Devolver "Instrucci$F3n inesperada."
		Caso FASMERR_EXTRA_CHARACTERS_ON_LINE
			Devolver "Caracteres extra en la l$EDnea."
		Caso FASMERR_SECTION_NOT_ALIGNED_ENOUGH
			Devolver "Secci$F3n no suficientemente alineada."
		Caso FASMERR_SETTING_ALREADY_SPECIFIED
			Devolver "Configuraci$F3n ya especificada."
		Caso FASMERR_DATA_ALREADY_DEFINED
			Devolver "Dato ya definido."
		Caso FASMERR_TOO_MANY_REPEATS
			Devolver "Demaciadas repeticiones."
		Caso FASMERR_SYMBOL_OUT_OF_SCOPE
			Devolver "Simbolo fuera de alcance."
		Caso FASMERR_USER_ERROR
			Devolver "Error de usuario."
		Caso FASMERR_ASSERTION_FAILED
			Devolver "Afirmaci$F3n fallida."
	FinSeleccionar
FinProc

Clase PscFasm
	ClaseVar C$F3digo,Error,Opcodes[]:Cadena
	ClaseVar Offsets[]:Byte
	ClaseVar L$EDnea,Offset:Entero
	Privado:
		'Proc Inicializar(Opcional Tama$F1o:Entero = 2048)
			'ReDim Offsets,Tama$F1o
		'FinProc
		Proc Finalizar
			Borrar Offsets
		FinProc
		'Constructor:Inicializar
		Destructor:Finalizar
	P$FAblico:
		Proc LimpiarOffsets
			Borrar Offsets
		FinProc
		Proc ProcesarL$EDnea(Referencia ASM:Cadena):Booleano
			Var Temp:Entero
			Si (Buscar(ASM,";") = 1) O (Buscar(ASM,CRLF)) Entonces Salir ' Si la l$EDnea es un comentario o tiene multiples sentencias, salir.
			C$F3digo = C$F3digo + ASM + CRLF
			AdmErr
				Offsets = Offsets + ProcesarASM(ASM,Temp) ' Procesamos el c$F3digo como l$EDnea.
			Finalmente
				Si LongMat(Offsets) = 0 Entonces Error = "Error al procesar la l$EDnea de c$F3digo." ; Salir
				Error = ProcesarASMError(Temp)
			FinAdmErr
		FinProc
		'Proc EjecutarL$EDnea(Referencia ASM:Cadena)
		
		'FinProc
		Proc Procesar:Booleano
			Var Temp:Entero,cTemp:Cadena
			Si C$F3digo = "" Entonces Error = "C$F3digo ensamblador Inexistente." ; Salir
			Borrar Offsets
			Offsets = ProcesarASM(C$F3digo,Temp,Verd,cTemp)
			Opcodes = Separar(cTemp," ")
			Error = ProcesarASMError(Temp)
			Si Offsets[0] = 0 Entonces L$EDnea = Offsets[1] ; Offset = Offsets[2] ; Salir
			Resultado = Verd
		FinProc
		Proc Ejecutar:Entero
			Var FASM_ASSEMBLERPROTOTYPE:FASM_ASSEMBLERPROTOTYPE,Temp:Entero
			Si LongMat(Offsets) = 0 Entonces Error = "Lista de offsets vacia." ; Salir
			FASM_ASSEMBLERPROTOTYPE@ = Offsets[0]@
			AdmErr
				Interrumpir
				Resultado = FASM_ASSEMBLERPROTOTYPE
			Controlar Temp
				Seleccionar Temp
					Caso &amp;C0000005
						Error = "Error al acceder en memoria."
				FinSeleccionar
				FASM_ASSEMBLERPROTOTYPE@ = 0
			FinAdmErr
		FinProc
FinClase
</Contenido></Datos>
