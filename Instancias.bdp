<Datos><Nombre></Nombre><Icono>AA==</Icono><Version><Mayor>0</Mayor><Menor>0</Menor><Revision>0</Revision><AutoIncr>0</AutoIncr></Version><Info/><Contenido>Importar "ConstIpaError.prp"
Importar "Macros.prp"
Importar "Procesos.prp"

Privado:
	Var Puntero:Entero
P$FAblico:

Clase PscMutex

	ClaseVar Nombre:Cadena ' Nombre de la instancia.
	
	Proc Iniciar:Entero
		Var Prog:PscProgramaLocal
		Crear Prog
		Puntero = CreateMutex(0, Verd, &gt;Nombre = ""?Prog.Nombre:Nombre) ' Si el nombre es nulo utilizar el nombre del ejecutable actual.
		Si Error = ERROR_ALREADY_EXISTS
		   Liberar ; Prog.Terminar
		FinSi
		Resultado = Puntero
		Destruir Prog
	FinProc

	Proc Liberar(Opcional h_Pun:Entero):Entero
		Resultado = ReleaseMutex(&gt;h_Pun?h_Pun:Puntero)
	FinProc
	
FinClase

'Var Instancia:PscMutex
Proc Instancia_Iniciar(Referencia Nombre:Cadena):Entero
	Si Nombre = "" Entonces GenerarError 0,"[Instancia_Iniciar] primer parametro es vacio."
	Resultado = CreateMutex(0,Verd,Nombre)
	Si Error = ERROR_ALREADY_EXISTS Entonces GenerarError 1,"[Instancia_Iniciar] instancia existente."
FinProc

Proc Instanca_Liberar(h_Pun:Entero):Entero
	Si h_Pun &lt;= 0 Entonces GenerarError 0,"[Instanca_Liberar] primer parametro igual o menor a cero."
	Devolver ReleaseMutex(h_Pun)
FinProc
</Contenido></Datos>
