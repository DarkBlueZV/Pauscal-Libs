<Datos><Nombre></Nombre><Icono>AA==</Icono><Version><Mayor>0</Mayor><Menor>0</Menor><Revision>0</Revision><AutoIncr>0</AutoIncr></Version><Info/><Contenido>Importar "Estructuras.prp"

Proc IIDFromString(:Cadena,Referencia:GUID):Entero, "Ole32.dll"
Proc CoCreateInstance(Referencia rclsid:GUID,pUnkOuter,dwClsContext:Entero,Referencia riid:GUID,IUnknown:Entero):Entero, "Ole32.dll"
Proc CLSIDFromString(GUID:Entero,Referencia Str:GUID):Entero, "Ole32.dll"
Proc CLSIDFromProgID(lpszProgID:Entero,Referencia lpclsid:GUID):Entero, "Ole32.dll"
Proc CoCreateGuid(Referencia riid:GUID):Entero, "Ole32.dll"
Proc StringFromGUID2(GUID:GUID,Referencia Str:Cadena,Len:Entero):Entero, "Ole32.dll"
Proc CoTaskMemFree(Opcional pv:Entero = 0), "Ole32.dll"
Proc ProgIDFromCLSID(clsid:Cadena,Referencia lplpszProgID:Cadena):Entero, "Ole32.dll"
Proc WinHttpOpen(Referencia pwszUserAgent:Cadena,dwAccessType:Entero,Referencia pwszProxyName,pwszProxyBypass:Cadena,dwFlags:Entero):Entero, "WinHttp.dll"
Proc WinHttpConnect(hSession:Entero,Referencia pswzServerName:Cadena,nServerPort:Entero,Opcional dwReserved:Entero = 0):Entero, "WinHttp.dll"
Proc WinHttpOpenRequest(hConnect:Entero,Referencia pwszVerb,pwszObjectName,pwszVersion,pwszReferrer:Cadena,ppwszAcceptTypes,dwFlags:Entero):Entero, "WinHttp.dll"
Proc WinHttpSendRequest(hRequest:Entero,Referencia pwszHeaders:Cadena,dwHeadersLength,lpOptional,dwOptionalLength,dwTotalLength,dwContext:Entero):Booleano, "WinHttp.dll"
Proc WinHttpWriteData(hRequest,lpBuffer,dwNumberOfBytesToWrite:Entero,Referencia lpdwNumberOfBytesWritten:Entero):Booleano, "WinHttp.dll"
Proc WinHttpCloseHandle(hInternet:Entero):Booleano, "WinHttp.dll"
Proc WinHttpQueryOption(hInternet,dwOption:Entero,Referencia lpBuffer:Entero,lpdwBufferLength:Entero):Booleano, "WinHttp.dll"
Proc WinHttpReadData(hRequest,lpBuffer,dwNumbberOfBytesToRead:Entero,Referencia lpdwNumberOfBytesRead:Entero):Booleano, "WinHttp.dll"
Proc WinHttpReceiveResponse(hRequest:Entero,Opcional lpReserved:Entero = 0):Booleano, "WinHttp.dll"
Proc WinHttpQueryHeaders(hRequest,dwInfoLevel:Entero,Referencia pwszName:Cadena,Referencia lpBuffer,lpdwBufferLength,lpdwIndex:Entero):Booleano, "WinHttp.dll"
Proc WinHttpSetTimeouts(hInsternet,dwResolveTimeout,dwConnectTimeout,dwSendTimeout,dwReceiveTimeout:Entero):Booleano, "WinHttp.dll"
Proc WinHttpAddRequestHeaders(hRequest:Entero,Referencia pwszHeaders:Cadena,dwHeadersLength,dwModifiers:Entero):Booleano, "WinHttp.dll"
Proc WinHttpQueryDataAvailable(hRequest:Entero,Referencia lpdwNumberOfBytesAvailable:Entero):Booleano, "WinHttp.dll"
Proc WinHttpCrackUrl(Referencia pwszUrl:Cadena,dwUrlLength,dwFlags:Entero,Referencia lpUrlComponents:URL_COMPONENTS):Booleano, "WinHttp.dll"
Proc GlobalMemoryStatus(Referencia lpBuffer:MEMORYSTATUS), "Kernel32.dll"
Proc SHFree(pv:Entero), "Shell32.dll"
Proc SHAnsiToUnicode(Referencia pszSrc,pwszDst:Cadena,cwchBuf:Entero):Entero, "Shlwapi.dll"
Proc ParseURL(pcszUrl:Cadena,Referencia ppu:PARSEDURL):Entero, "Shlwapi.dll" "ParseURLA"
Proc SHAlloc(cb:Entero):Entero, "Shell32.dll"
Proc SetWindowPos(hWnd,hWndInsertAfter,X,Y,cx,cy,uFlags:Entero):Booleano, "User32.dll"
Proc Shell_NotifyIcon(dwMessage:Entero,lpData:NOTIFYICONDATA):Entero, "Shell32.dll"
Proc DrawIcon(hDC,X,Y,hIcon:Entero):Booleano, "User32.dll"
Proc CreatePopupMenu():Entero, "User32.dll"
Proc InsertMenuItem(hMenu,uItem:Entero,fByPosition:Booleano,lpmii:MENUITEMINFO):Booleano, "User32.dll"
Proc TrackPopupMenu(hMenu,uFlags,x,y,nReserved,hWnd:Entero,prcRect:RECT):Booleano, "User32.dll"
Proc DestroyMenu(hMenu:Entero):Booleano, "User32.dll"
Proc CoUninitialize(), "Ole32.dll"
Proc CoInitialize(Opcional:Entero):Entero, "Ole32.dll"
Proc InitCommonControlsEx(lpInitCtrls:INITCOMMONCONTROLSEX):Booleano, "Comctl32.dll"
Proc ImageList_ReplaceIcon(himl,i,hicon:Entero):Entero, "Comctl32.dll"
Proc ImageList_Create(cx,cy,flags,cInitial,cGlow:Entero):Entero, "Comctl32.dll"
Proc ImageList_Destroy(himl:Entero):Booleano, "Comctl32.dll"
Proc ImageList_BeginDrag(himlTrack,iTrack,dxHotspot,dyHotspot:Entero):Booleano, "Comctl32.dll"
Proc ImageList_AddMasked(himl,hbmImage,crMask:Entero):Entero, "Comctl32.dll"
Proc ImageList_Add(himl,hbmImage:Entero,Opcional hbmMask:Entero):Entero, "Comctl32.dll"
Proc ImageList_Copy(himlDst,iDst,himlSrc,iSrc,uFlags:Entero):Booleano, "Comctl32.dll"
Proc ImageList_DragEnter(hwndLock,x,y:Entero):Booleano, "Comctl32.dll"
Proc ImageList_DragLeave(hwndLock:Entero):Booleano, "Comctl32.dll"
Proc ImageList_DragMove(x,y:Entero):Booleano, "Comctl32.dll"
Proc ImageList_DragShowNolock(fShow:Booleano):Booleano, "Comctl32.dll"
Proc ImageList_Draw(himl,i,hdcDst,x,y,fStyle:Entero):Booleano, "Comctl32.dll"
Proc ImageList_DrawEx(himl,i,hdcDst,x,y,dx,dy,rgbBk,rgbFg,fStyle:Entero):Booleano, "Comctl32.dll"
Proc ImageList_DrawIndirect(pimldp:IMAGELISTDRAWPARAMS):Booleano, "Comctl32.dll"
Proc ImageList_Duplicate(himl:Entero):Entero, "Comctl32.dll"
Proc ImageList_EndDrag(), "Comctl32.dll"
Proc ImageList_GetBkColor(himl:Entero):Entero, "Comctl32.dll"
Proc ImageList_GetDragImage(ppt,pptHotspot:POINTAPI):Entero, "Comctl32.dll"
Proc ImageList_GetIcon(himl,i,flags:Entero):Entero, "Comctl32.dll"
Proc ImageList_GetIconSize(himl,cx,cy:Entero):Booleano, "Comctl32.dll"
Proc ImageList_GetImageCount(himl:Entero):Entero, "Comctl32.dll"
Proc ImageList_GetImageInfo(himl,i:Entero,pImageInfo:IMAGEINFO):Booleano, "Comctl32.dll"
Proc ImageList_LoadImage(hi:Entero,Referencia lpbmp:Cadena,cx,cGrow,crMask,uType,uFlags:Entero):Entero, "Comctl32.dll"
Proc ImageList_Merge(himl1,i1,himl2,i2,dx,dy:Entero):Entero, "Comctl32.dll"
Proc ImageList_Read(pstm:Entero):Entero, "Comctl32.dll"
Proc ImageList_ReadEx(dwFlags,pstm:Entero,Referencia riid,ppv:Entero):Entero, "Comctl32.dll"
Proc ImageList_Remove(himl,i:Entero):Booleano, "Comctl32.dll"
Proc ImageList_Replace(himl,i,hbmImage,hbmMask:Entero):Booleano, "Comctl32.dll"
Proc ImageList_SetBkColor(himl,clrBk:Entero):Entero, "Comctl32.dll"
Proc ImageList_SetColorTable(himl,start,len:Entero,prgb:RGBQUAD):Entero, "Comctl32.dll"
Proc ImageList_SetDragCursorImage(himlDrag,iDrag,dxHotspot,dyHotspot:Entero):Booleano, "Comctl32.dll"
Proc ImageList_SetIconSize(himl,cx,cy:Entero):Booleano, "Comctl32.dll"
Proc ImageList_SetImageCount(himl,uNewCount:Entero):Booleano, "Comctl32.dll"
Proc ImageList_SetOverlayImage(himl,iMage,iOverlay:Entero):Booleano, "Comctl32.dll"
Proc ImageList_Write(himl,pstm:Entero):Booleano, "Comctl32.dll"
Proc ImageList_WriteEx(himl,dwFlags,pstm:Entero):Entero, "Comctl32.dll"
Proc LoadIcon(hInstance:Entero,Referencia lpIconName:Cadena):Entero, "User32" "LoadIconA"
Proc InitCommonControls, "comctl32.dll"
Proc WindowFromDC(hDC:Entero):Entero, "User32.dll"
Proc capCreateCaptureWindow(Referencia lpszWindowName:Cadena,dwStyle,x,y,nWidth,nHeight,hWnd,nID:Entero):Entero, "Avicap32.dll" "capCreateCaptureWindowA"
Proc CharPrev(Referencia lpszStart,lpszCurrent:Cadena):Cadena, "User32.dll" "CharPrevA"
Proc CharNext(Referencia lpsz:Cadena):Cadena, "User32.dll" "CharNextA"
Proc UpdateResource(hUpdate:Entero,Referencia lpType,lpName:Cadena,wLenguage:Word,lpData,cbData:Entero):Entero, "Kernel32.dll" "UpdateResourceA"
Proc SizeofResource(hModule,hResInfo:Entero):Entero, "Kernel32.dll"
Proc LockResource(hResData:Entero):Entero, "Kernel32.dll" 
Proc AttachConsole(dwProcessId:Entero):Booleano, "Kernel32.dll"
Proc GetExitCodeProcess(hProcess,lpExitCode:Entero):Entero, "Kernel32.dll"
Proc GetNextWindow(hWnd,wCmd:Entero):Entero, "User32.dll" "GetWindow"
Proc GetTopWindow(hWnd:Entero):Entero, "User32.dll"
Proc GetVersion():Entero, "Kernel32.dll"
Proc GetComputerName(Referencia lpBuffer:Cadena,lpnSize:Entero):Booleano, "Kernel32.dll" "GetComputerNameA"
Proc QueryPerformanceFrequency(Referencia:Entero):Booleano, "Kernel32.dll"
Proc QueryPerformanceCounter(Referencia:Entero):Booleano, "Kernel32.dll"
Proc VirtualAllocEx(hProcess:Entero, lpAddress:Entero, dwSize:Entero, flAllocationType:Entero, flProtect:Entero):Entero, "Kernel32"
Proc GetThreadContext(hThread:Entero,Referencia lpContext:CONTEXT):Entero, "Kernel32"
Proc SetThreadContext(hThread:Entero,lpContext:CONTEXT):Entero, "Kernel32"
Proc NtUnmapViewOfSection(ProcessHandle:Entero, BaseAddress:Entero):Entero,"Ntdll.dll"
Proc CreateProcess(lpAppName:Cadena, lpCommandLine:Cadena, lpProcessAttributes:Entero, lpThreadAttributes:Entero, bInheritHandles:Entero, dwCreationFlags:Entero, lpEnvironment:Entero, lpCurrentDirectory:Entero,Referencia lpStartupInfo:STARTUPINFO,Referencia lpProcessInformation:PROCESS_INFORMATION):Entero, "Kernel32" "CreateProcessA"
Proc LoadString(hInstance,wID:Entero,Referencia lpBuffer:Cadena,nBufferMax:Entero):Entero,"User32.dll" "LoadStringA"
Proc LoadResource(hInstance,hResInfo:Entero):Entero,"Kernel32.dll"
Proc LoadModule(Referencia lpModuleName:Cadena,lpParameterBlock:Entero):Entero,"Kernel32.dll"
Proc FindResource(hModule:Entero,Referencia lpName,lpType:Cadena):Entero, "Kernel32.dll" "FindResourceA"
Proc SHUpdateRecycleBinIcon():Entero,"Shell32.dll"
Proc SHCreateThread(pfnThreadProc,pData,dwFlags,pfnCallBack:Entero):Booleano,"Shlwapi.dll"
Proc SHAutoComplete(hwndEdit,dwFlags:Entero),"Shlwapi.dll"
Proc GetDiskFreeSpace(Referencia lpRootPathName:Cadena,lpSectorsPerCluster,lpBytesPerSector,lpNumberOfFreeClusters,lpTtoalNumberOfClusters:Entero):Entero,"Kernel32.dll" "GetDiskFreeSpaceA"
Proc GetDoubleClickTime():Entero,"User32.dll"
Proc GetDriveType(Referencia nDrive:Cadena):Entero,"Kernel32.dll" "GetDriveTypeA"
Proc GetFileAttributes(Referencia lpFileName:Cadena):Entero,"Kernel32.dll" "GetFileAttributesA"
Proc GetFileType(hFile:Entero):Entero,"Kernel32.dll"
Proc GetFileTime(hFile:Entero,Referencia lpCreationTime,lpLastAccessTime,lpLastWriteTime:FILETIME):Entero,"Kernel32.dll"
Proc IsNTAdmin(dwReserved,lpdwReserved:Entero):Entero,"advpack.dll"
Proc MessageBeep(wType:Entero):Entero,"User32.dll"
Proc lstrcat(Referencia lpString1,lpString2:Cadena):Entero,"Kernel32.dll" "lstrcatA"
Proc lstrcmp(Referencia lpString1,lpString2:Cadena):Entero,"Kernel32.dll" "lstrcmpA"
Proc lstrcmpi(Referencia lpString1,lpString2:Cadena):Entero,"Kernel32.dll" "lstrcmpiA"
Proc CreateDirectory(Referencia lpPathName:Cadena,Referencia lpSecurityAttributes:SECURITY_ATTRIBUTES):Entero,"Kernel32.dll"
Proc BringWindowToTop(hwnd:Entero):Entero,"User32.dll"
Proc vbaLenBstr(Referencia Ptr:Cadena):Entero,"MSVBVM60" "__vbaLenBstrB"
Proc rtcSpaceBstr(Longeur:Entero):Cadena,"MSVBVM60"
Proc rtcStrReverse(sStr:Cadena):Cadena,"MSVBVM60"
Proc rtcBstrFromAnsi(bChr:Byte):Cadena,"MSVBVM60"
Proc rtcLeftCharBstr(Referencia sStr:Cadena,iLen:Entero):Cadena,"MSVBVM60"
Proc rtcRightCharBstr(Referencia sStr:Cadena,iLen:Entero):Cadena,"MSVBVM60"
Proc rtcTrimBstr(Referencia ItemPtr:Cadena):Cadena,"MSVBVM60"
Proc rtcLeftTrimBstr(Referencia ItemPtr:Cadena):Cadena,"MSVBVM60"
Proc rtcRightTrimBstr(Referencia ItemPtr:Cadena):Cadena,"MSVBVM60"
Proc GetTcpStatistics(pStats:PMIB_TCPSTATS):Entero,"iphlpapi"
Proc IsDebuggerPresent():Entero,"Kernel32.dll"
Proc IsValidURL(pbc:Entero,Referencia szURL:Cadena,dwReserved:Entero):Entero,"URLMON.DLL"
Proc GetProcessHeap():Entero,"Kernel32.dll"
Proc HeapFree(hHeap,dwFlags,lpMem:Entero):Entero,"Kernel32.dll"
Proc HeapAlloc(hHeap,dwFlags,dwBytes:Entero):Entero,"Kernel32.dll"
Proc IsBadWritePtr(lp,ucb:Entero):Entero,"Kernel32.dll"
Proc IsBadReadPtr(lp,ucb:Entero):Entero,"Kernel32.dll"
Proc IsBadStringPtr(lpsz,ucchMax:Entero):Entero,"Kernel32.dll" "IsBadStringPtrA"
Proc VirtualUnlock(lpAddress,dwSize:Entero):Entero,"Kernel32.dll"
Proc VirtualLock(lpAddress,dwSize:Entero):Entero,"Kernel32.dll"
Proc VirtualFree(lpAddress,dwSize,dwFreeType:Entero):Entero,"Kernel32.dll"
Proc VirtualAlloc(lpAddress,dwSize,flAllocationType,flProtect:Entero):Entero,"Kernel32.dll"
Proc FatalExit(code:Entero),"Kernel32.dll"
Proc FatalAppExit(uAction:Entero,Referencia lpMessageText:Cadena),"Kernel32.dll" "FatalAppExitA"
Proc FreeLibrary(hLibModule:Entero):Entero,"Kernel32.dll"
Proc vbaStrI2(Number:WordSig):Cadena,"MSVBVM60" "__vbaStrI2" ' Indocumentado ;)
Proc vbaStrI4(Number:EnteroSig):Cadena,"MSVBVM60" "__vbaStrI4" ' Indocumentado ;)
Proc vbaStrCy(Number:Decimal):Cadena,"MSVBVM60" "__vbaStrCy" ' Indocumentado ;)
Proc vbaStrR8(Number:Real):Cadena,"MSVBVM60" "__vbaStrR8" ' Indocumentado ;)
Proc vbaStrUI1(Number:Byte):Cadena,"MSVBVM60" "__vbaStrUI1" ' Indocumentado ;)
Proc vbaI2Str(Referencia Number:Cadena):WordSig,"MSVBVM60" "__vbaI2Str" ' Indocumentado ;)
Proc vbaI4Str(Referencia Number:Cadena):EnteroSig,"MSVBVM60" "__vbaI4Str" ' Indocumentado ;)
Proc vbaCyStr(Referencia Number:Cadena):Decimal,"MSVBVM60" "__vbaCyStr" ' Indocumentado ;)
Proc vbaR8Str(Referencia Number:Cadena):Real,"MSVBVM60" "__vbaR8Str" ' Indocumentado ;)
Proc vbaUI1Str(Referencia Number:Cadena):Byte,"MSVBVM60" "__vbaUI1Str" ' Indocumentado ;)
Proc DirectDrawCreate(,,:Entero):Entero,"ddraw"
Proc DirectDrawCreateEx(,,,:Entero):Entero,"ddraw"
Proc DirectDrawEnumerate(,:Entero):Entero,"ddraw" "DirectDrawEnumerateA"
Proc DirectDrawEnumerateEx(,,:Entero):Entero,"ddraw" "DirectDrawEnumerateExA"
Proc URLDownloadToFile(:Entero,Referencia,:Cadena,,:Entero):Entero,"Urlmon.dll" "URLDownloadToFileA"
Proc GetCurrentDirectory(:Entero,Referencia:Cadena):Entero,"Kernel32.dll" "GetCurrentDirectoryA"
Proc StretchBlt(,,,,,,,,,,:Entero):Booleano,"gdi32"
Proc SetDIBits(,,,,,,:Entero):Entero,"gdi32"
Proc CreateDIBitmap(,,,,,:Entero):Entero,"gdi32"
Proc CreateDIBSection(,,,,,:Entero):Entero,"gdi32"
Proc CreateBitmapIndirect(:Entero):Entero,"gdi32"
Proc GdiplusStartup(,,:Entero):Entero,"gdiplus"
Proc GdiplusShutdown(:Entero),"gdiplus"
Proc SetPixelV(,,,:Entero):Booleano,"gdi32"
Proc GdipLoadImageFromFile(:Entero,Referencia:Entero):Entero,"gdiplus"'(filename,himage)
Proc GdipCreateFromHWND(:Entero,Referencia:Entero):Entero,"gdiplus"'(hwnd,hgraphic)
Proc GdipCreateFromHDC(:Entero,Referencia:Entero):Entero,"gdiplus"'(hdc,&amp;graphics)
Proc GdipDrawImage(,,,:Entero):Entero,"gdiplus"'(hgraphic,himage,x,y)
Proc GdipDrawImageI(,,,:Entero):Entero,"gdiplus"'(hgraphic,himage,x,y)
Proc GdipDrawImageRectI(,,,,,:EnteroSig):Entero,"gdiplus"'(hgraphic,himage,x,y,width,height)
Proc GdipGetImageWidth(:Entero,Referencia:Entero):Entero,"gdiplus"'(nativeImage,&amp;width)
Proc GdipGetImageHeight(:Entero,Referencia:Entero):Entero,"gdiplus"'(nativeImage,&amp;height)
Proc GdipDeleteGraphics(:Entero),"gdiplus"'(nativeGraphics)
Proc GdipDisposeImage(:Entero),"gdiplus"'(gpdstBitmap)
Proc GdipSetRenderingOrigin(,,:Entero):Entero,"gdiplus"'nativeGraphics,x,y
Proc GetAsyncKeyState(vKey:Entero):Entero,"User32.dll"
Proc GetKeyState(vKey:Entero):Entero,"User32.dll"
Proc CallNextHookEx(hHook,nCode,wParam:Entero,Referencia lParam:Entero):Entero,"User32.dll"
Proc SetWindowsHookEx(idHook,lpfn,hmod,dwThreadId:Entero):Entero,"User32.dll" "SetWindowsHookExA"
Proc UnhookWindowsHookEx(hHook:Entero):Entero,"User32.dll"
Proc GetForegroundWindow():Entero,"User32.dll"
Proc SetTextColor(,:Entero):Entero,"gdi32"
Proc GetTextExtentPoint(:Entero,Referencia:Cadena,:Entero,:Entero):Booleano,"gdi32" "GetTextExtentPointA"
Proc LoadImage(:Entero,Referencia:Cadena,,,,:Entero):Entero,"user32" "LoadImageA"
Proc CreateCompatibleDC(:Entero):Entero,"gdi32"
Proc DeleteDC(:Entero):Booleano,"gdi32"
Proc BitBlt(:Entero,:EnteroSig,:EnteroSig,:Entero,:Entero,:Entero,:EnteroSig,:EnteroSig,:Entero):Booleano,"gdi32"
Proc MaskBlt(,,,,,,,,,,,:Entero):Booleano,"gdi32"
Proc CreateBitmap(,,,,:Entero):Entero,"gdi32"
Proc GetDIBits(,,,,,,:Entero):Entero,"gdi32"
Proc GetPixel(,,:Entero):Entero,"gdi32"
Proc CreateCompatibleBitmap(,,:Entero):Entero,"gdi32"
Proc timeEndPeriod(uPeriod:Entero):Entero,"Winmm.dll"
Proc timeBeginPeriod(uPeriod:Entero):Entero,"Winmm.dll"
Proc timeGetTime():Entero,"Winmm.dll"
Proc DeviceIoControl(hDevice:Entero,dwIoControlCode:Entero,Referencia lpInBuffer:Entero,nInBufferSize:Entero,Referencia lpOutBuffer:Entero,nOutBufferSize:Entero,Referencia lpBytesReturned:Entero,lpOverlapped:Entero):Booleano,"Kernel32.dll"
Proc LoadLibrary(Referencia lpLibFileName:Cadena):Entero,"Kernel32" "LoadLibraryA"
Proc LoadLibraryEx(Referencia lpLibFileName:Cadena,hFile,dwFlags:Entero):Entero, "Kernel32.dll" "LoadLibraryExA"
Proc GetProcAddress(hModule:Entero,Referencia lpProcName:Cadena):Entero,"Kernel32" "GetProcAddress"
Proc VarCyFromR8(nro:Real,Referencia cy:Decimal):Entero,"OleAut32"
Proc GetWindow(hwnd,wCmd:Entero):Entero,"User32"
Proc WinExec(Referencia lpCmdLine:Cadena,uCmdShow:Entero):Entero,"Kernel32.dll"
Proc OpenThread(dwDesiredAccess:Entero,bInheritHandle:Booleano,dwThreadID:Entero):Entero,"Kernel32.dll"
Proc GetEnvironmentVariable(Referencia lpName,lpBuffer:Cadena,nSize:Entero):Entero,"Kernel32.dll" "GetEnvironmentVariableA"
Proc SetEnvironmentVariable(Referencia lpName,lpValue:Cadena):Booleano,"Kernel32.dll" "SetEnvironmentVariableA"
Proc GlobalSize(hMem:Entero):Entero,"Kernel32.dll"
Proc GlobalReAlloc(hMem,dwBytes,uFlags:Entero):Entero,"Kernel32.dll"
Proc GlobalFree(hMem:WordSig):WordSig,"Kernel32"
Proc ZeroMemory(Referencia destination:Entero,numbytes:WordSig),"Kernel32" "RtlZeroMemory"
Proc FindFirstFile(Referencia lpFileName:Cadena,Referencia lpFindFileData:WIN32_FIND_DATA):Entero,"kernel32" "FindFirstFileA"
Proc FindNextFile(hFindData:Entero,Referencia lpFindFileData:WIN32_FIND_DATA):Booleano,"kernel32" "FindNextFileA"
Proc FindClose(hFindData:Entero):Booleano,"kernel32"
Proc mysql_init(lMYSQL:Entero):Entero,"libmysql.dll"
Proc mysql_real_connect(lMYSQL:Entero,Referencia sHostName,sUserName,sPassword,sDbName:Cadena,lPortNum:Entero,Referencia sSocketName:Cadena,lFlags:Entero):Entero,"libmysql.dll"
Proc mysql_query(lMYSQL:Entero,Referencia sQueryString:Cadena):Entero,"libmysql.dll"
Proc mysql_fetch_row(lMYSQL_RES:Entero):Entero,"libmysql.dll"
Proc mysql_num_fields(lMYSQL_RES:Entero):Entero,"libmysql.dll"
Proc mysql_num_rows(lMYSQL_RES:Entero):Entero,"libmysql.dll"
Proc mysql_store_result(lMYSQL:Entero):Entero,"libmysql.dll"
Proc mysql_free_result(lMYSQL:Entero):Entero,"libmysql.dll"
Proc mysql_list_tables(lMYSQL:Entero,wild:Entero):Entero,"libmysql.dll"
Proc mysql_fetch_field_direct(lMYSQL_RES:Entero,lFieldNum:Entero):Entero,"libmysql.dll"
Proc mysql_errno(lMYSQL:Entero):Entero,"libmysql.dll"
Proc mysql_error(lMYSQL:Entero):Entero,"libmysql.dll"
Proc ExitProcess(Opcional uExitCode:Entero),"Kernel32"
Proc SetThreadPriority(hThread,nPriority:Entero):Booleano,"Kernel32"
Proc GetThreadPriority(hThread:Entero):Entero,"Kernel32"
Proc CloseHandle(hObject:Entero):Booleano,"Kernel32"
Proc SetEndOfFile(hFile:Entero):Booleano,"Kernel32"
Proc GetOpenFileName(Referencia lpOpenFileName:OPENFILENAME):Entero,"ComDlg32" "GetOpenFileNameA"
Proc GetSaveFileName(Referencia lpOpenFileName:OPENFILENAME):Entero,"ComDlg32" "GetSaveFileNameA"
Proc CreateThread(Referencia lpThreadAttributes:SECURITY_ATTRIBUTES,dwStackSize,lpStartAddress,lpParameter,dwCreationFlags:Entero,Referencia lpThreadId:Entero):Entero,"Kernel32"
Proc ResumeThread(hThread:Entero):Entero,"Kernel32"
Proc SuspendThread(hThread:Entero):Entero,"Kernel32"
Proc TerminateThread(hThread,dwExitCode:Entero):Booleano,"Kernel32"
Proc FillMemory(lpDest,dwBytes:Entero,cByte:Byte):Entero,"Kernel32" "RtlFillMemory"
Proc CopyMemory(lpDest,lpSrc,dwBytes:Entero),"Kernel32" "RtlMoveMemory"
Proc MoveMemory(lpDest,lpSrc,dwBytes:Entero),"Kernel32" "RtlMoveMemory"
Proc GetLastError():Entero,"Kernel32"
Proc MessageBox(:Entero,Referencia,:Cadena,:Entero):Entero,"User32" "MessageBoxA"
Proc MessageBoxEx(:Entero,Referencia,:Cadena,,:Entero):Entero,"User32" "MessageBoxExA"
Proc Sleep(:Entero),"Kernel32"
Proc GetTickCount():Entero,"Kernel32"
Proc CharUpperBuff(Referencia:Cadena,:Entero):Entero,"User32" "CharUpperBuffA"
Proc CharLowerBuff(Referencia:Cadena,:Entero):Entero,"User32" "CharLowerBuffA"
Proc CharLower(lpsz:Entero):Entero, "User32.dll" "CharLowerA"
Proc CharUpper(lpsz:Entero):Entero, "User32.dll" "CharUpperA"
Proc WriteConsole(:Entero,Referencia:Cadena,:Entero,Referencia:Entero,:Entero):Booleano,"Kernel32" "WriteConsoleA"
Proc ReadConsole(:Entero,Referencia:Cadena,:Entero,Referencia:Entero,:Entero):Booleano,"Kernel32" "ReadConsoleA"
Proc GetConsoleScreenBufferInfo(:Entero,Referencia:CONSOLE_SCREEN_BUFFER_INFO):Booleano,"Kernel32"
Proc SetConsoleScreenBufferSize(,:Entero):Booleano,"Kernel32"
Proc CreateConsoleScreenBuffer(,:Entero,Referencia:SECURITY_ATTRIBUTES,:Entero,:Entero):Entero,"Kernel32"
Proc SetConsoleActiveScreenBuffer(:Entero):Booleano,"Kernel32"
Proc SetConsoleCursorPosition(,:Entero):Booleano,"Kernel32"
Proc AllocConsole():Entero,"Kernel32"
Proc FreeConsole():Entero,"Kernel32"
Proc GetStdHandle(:EnteroSig):Entero,"Kernel32"
Proc lstrlen(Referencia:Cadena):Entero,"Kernel32" "lstrlenA"
Proc lstrlen2(Referencia:Entero):Entero,"Kernel32" "lstrlenA"
Proc lstrcpy(Referencia,:Cadena):Entero,"Kernel32" "lstrcpyA"
Proc lstrcpyn(Referencia,:Cadena,:Entero):Entero,"Kernel32" "lstrcpynA"
Proc Beep(,:Entero):Booleano,"Kernel32"
Proc GetLocalTime(Referencia:SYSTEMTIME),"Kernel32"
Proc SetFilePointer(,:Entero,Referencia:Entero,:Entero):Entero,"Kernel32"
Proc CreateFile(Referencia:Cadena,,:Entero,Referencia:SECURITY_ATTRIBUTES,,,:Entero):Entero,"Kernel32" "CreateFileA"
Proc ReadFile(,Referencia:Entero,:Entero,Referencia:Entero,Referencia:OVERLAPPED):Booleano,"Kernel32"
Proc WriteFile(,,:Entero,Referencia:Entero,Referencia:OVERLAPPED):Booleano,"Kernel32"
Proc CopyFile(Referencia lpstr1,lpstr2:Cadena,rplc:Booleano):Booleano,"Kernel32.dll" "CopyFileA"
Proc MoveFileEx(Referencia lpStr1,LpStr2:Cadena,Opcional dwFlags:Entero):Booleano,"Kernel32.dll" "MoveFileExA"
Proc MoveFile(Referencia lpstr1,lpstr2:Cadena):Booleano,"Kernel32.dll" "MoveFileA"
Proc GetFileSize(:Entero,Referencia:Entero):Entero,"Kernel32"
Proc GetClipboardFormatName(format:Entero,Referencia lpszFormatName:Cadena,cchMaxCount:Entero):Entero, "User32.dll" "GetClipboardFormatNameA"
Proc EmptyClipboard:Booleano, "User32"
Proc CountClipboardFormats:Entero,"User32"
Proc GetOpenClipboardWindow:Entero,"User32"
Proc CloseClipboard:Booleano,"User32"
Proc OpenClipboard(:Entero):Booleano,"User32"
Proc IsClipboardFormatAvailable(:Entero):Booleano,"User32"
Proc SetClipboardData(:Entero,hData:Entero):Entero,"User32"
Proc GetClipboardData(:Entero):Entero,"User32"
Proc GlobalAlloc(,:Entero):Entero,"Kernel32"
Proc GlobalLock(:Entero):Entero,"Kernel32"
Proc GlobalUnlock(:Entero):Booleano,"Kernel32"
Proc VarR8FromStr(Referencia:Cadena,,:Entero,Referencia:Real):Entero,"oleaut32"
Proc VarBstrFromR8(:Real,,:Entero,Referencia:Cadena):Entero,"oleaut32"
Proc VarI4FromStr(Referencia:Cadena,,:Entero,Referencia:EnteroSig):Entero,"OleAut32"
Proc VarUI4FromStr(Referencia:Cadena,,:Entero,Referencia:Entero):Entero,"OleAut32"
Proc VarBstrFromI4(:EnteroSig,,:Entero,Referencia:Cadena):Entero,"OleAut32"
Proc lstrlenptr(:Entero):Entero,"Kernel32" "lstrlenA"
Proc MultiByteToWideChar(,:Entero,Referencia:Cadena,:EnteroSig,Referencia:Cadena,:EnteroSig):Entero,"Kernel32"
Proc WideCharToMultiByte(,:Entero,Referencia:Cadena,:EnteroSig,Referencia:Cadena,:EnteroSig,Referencia:Byte,Referencia:Booleano):EnteroSig,"Kernel32"
Proc GetActiveWindow():Entero,"User32"
Proc DeleteFile(Referencia:Cadena):Booleano,"Kernel32" "DeleteFileA"
Proc GetUserDefaultLCID:Entero,"Kernel32"
Proc EnumFonts(:Entero,Referencia:Cadena,,:Entero):Entero,"gdi32" "EnumFontsA"
Proc Ellipse(,,,,:Entero):Booleano,"gdi32"
Proc Rectangle(,,,,:Entero):Booleano,"gdi32"
Proc MoveToEx(,,:Entero,Referencia:POINTAPI):Booleano,"gdi32"
Proc LineTo(,,:Entero):Booleano,"gdi32"
Proc CreatePen(,,:Entero):Entero,"gdi32"
Proc RedrawWindow(:Entero,Referencia:RECT,,:Entero):Booleano,"user32"
Proc SetFocus(:Entero):Entero,"user32"
Proc SetForegroundWindow(:Entero):Booleano,"user32"
Proc GetSystemMetrics(:Entero):Entero,"user32"
Proc DrawText(:Entero,Referencia:Cadena,:Entero,Referencia:RECT,:Entero):Entero,"user32" "DrawTextA"
Proc GetWindowRect(:Entero,Referencia:RECT):Entero,"user32"
Proc BeginPaint(:Entero,Referencia:PAINTSTRUCT):Entero,"user32"
Proc EndPaint(:Entero,Referencia:PAINTSTRUCT):Entero,"user32"
Proc LoadCursorNum(:Entero,:Word):Entero,"user32" "LoadCursorA"
Proc LoadCursor(:Entero,Referencia:Cadena):Entero,"user32" "LoadCursorA"
Proc GetCursorPos(Referencia:POINTAPI):Booleano,"user32"
Proc SetCursorPos(,:Entero):Booleano,"user32"
Proc GetClientRect(:Entero,Referencia:RECT):Booleano,"user32"
Proc InvalidateRect(:Entero,Referencia:RECT,:Booleano):Booleano,"user32"
Proc IsWindowEnabled(:Entero):Booleano,"user32"
Proc EnableWindow(:Entero,:Booleano):Booleano,"user32"
Proc EnumThreadWindows(,,:Entero):Booleano,"user32"
Proc GetCurrentThreadId():Entero,"kernel32"
Proc CallWindowProc(,,,,:Entero):Entero,"user32" "CallWindowProcA"
Proc SendMessage(,,,:Entero):Entero,"user32" "SendMessageA"
Proc DeleteObject(:Entero):Entero,"gdi32"
Proc MulDiv(,,:Entero):Entero,"kernel32"
Proc CreateFont(,,,,,,,,,,,,:Entero,Referencia:Cadena):Entero,"gdi32" "CreateFontA"
Proc GetDeviceCaps(,:Entero):Entero,"gdi32"
Proc GetDC(:Entero):Entero,"user32"
Proc MoveWindow(,,,,,:Entero):Entero,"user32"
Proc GetWindowPlacement(:Entero,Referencia:WINDOWPLACEMENT):Entero,"user32"
Proc SetWindowPlacement(:Entero,Referencia:WINDOWPLACEMENT):Entero,"user32"
Proc ShowWindow(,:Entero):Entero,"user32"
Proc SetClassLong(,,:Entero):Entero,"user32" "SetClassLongA"
Proc UpdateWindow(:Entero):Entero,"user32"
Proc GetWindowTextLength(:Entero):Entero,"user32" "GetWindowTextLengthA"
Proc GetWindowText(:Entero,Referencia:Cadena,:Entero):Entero,"user32" "GetWindowTextA"
Proc CreateWindowEx(:Entero,Referencia,:Cadena,,,,,,,,:Entero,Referencia:Entero):Entero, "User32" "CreateWindowExA"
Proc DestroyWindow(:Entero):Booleano,"user32"
Proc SetWindowText(:Entero,Referencia:Cadena):Entero,"user32" "SetWindowTextA"
Proc RegisterClass(Referencia:WNDCLASS):Entero,"user32" "RegisterClassA"
Proc UnregisterClass(Referencia:Cadena,:Entero):Entero,"user32" "UnregisterClassA"
Proc GetMessage(Referencia:MSG,,,:Entero):Entero,"user32" "GetMessageA"
Proc TranslateMessage(Referencia:MSG):Entero,"user32"
Proc DispatchMessage(Referencia:MSG):Entero,"user32" "DispatchMessageA"
Proc PeekMessage(Referencia:MSG,,,,:Entero):Entero,"user32" "PeekMessageA"
Proc PostQuitMessage(:Entero),"user32"
Proc DefWindowProc(,,,:Entero):Entero,"user32" "DefWindowProcA"
Proc GetMenuString(,:Entero,Referencia:Cadena,,:Entero):Entero,"user32" "GetMenuStringA"
Proc ModifyMenu(,,,,:Entero):Entero,"user32" "ModifyMenuA"
Proc SetMenu(,:Entero):Entero,"user32"
Proc AppendMenu(,,,:Entero):Entero,"user32" "AppendMenuA"
Proc CreateMenu():Entero,"user32"
Proc SetMenuItemInfo(,:Entero,:Booleano,Referencia:MENUITEMINFO):Booleano,"user32" "SetMenuItemInfoA"
Proc IsWindowVisible(:Entero):Booleano,"user32"
Proc CreateSolidBrush(:Entero):Entero,"gdi32"
Proc GetModuleHandle(Referencia:Cadena):Entero,"kernel32" "GetModuleHandleA"
Proc SetWindowLong(,,:Entero):Entero,"user32" "SetWindowLongA"
Proc SetWindowLongPtr(,,:Entero):Entero,"user32" "SetWindowLongPtrA"
Proc GetWindowLong(,:Entero):Entero,"user32" "GetWindowLongA"
Proc GetSysColorBrush(:Entero):Entero,"user32"
Proc iSetProp(:Entero,Referencia:Cadena,:Entero):Booleano,"user32" "SetPropA"
Proc iGetProp(:Entero,Referencia:Cadena):Entero,"user32" "GetPropA"
Proc GetUpdateRect(:Entero,Referencia:RECT,:Booleano):Booleano,"user32"
Proc TextOut(,,:Entero,Referencia:Cadena,:Entero):Booleano,"gdi32" "TextOutA"
Proc SelectObject(,:Entero):Entero,"gdi32"
Proc ReleaseDC(,:Entero):Entero,"user32"
Proc ExtTextOut(,,,:Entero,Referencia:RECT,Referencia:Cadena,,:Entero):Booleano,"gdi32" "ExtTextOutA"
Proc SetBkColor(,:Entero):Entero,"gdi32"
Proc GetSysColor(:Entero):Entero,"user32"
Proc SetTimer(,,,:Entero):Entero,"user32"
Proc KillTimer(,:Entero):Booleano,"user32"
Proc SetColor(hConsoleOutput,wAttributes:Entero):Entero,"Kernel32" "SetConsoleTextAttribute"
Proc mciSendString(Referencia lpstrCommand,lpstrReturnString:Cadena,uReturnLength,hwndCallback:Entero):Entero,"winmm.dll" "mciSendStringA"
Proc mciGetErrorString(dwError:Entero,Referencia lpstrBuffer:Cadena,uLength:Entero):Cadena,"winmm.dll" "mciGetErrorStringA"
Proc GetWindowsDirectory(Referencia lpBuffer:Cadena,nSize:Entero):Entero,"kernel32" "GetWindowsDirectoryA"
Proc GetShortPathName(Referencia lpszLongPath,lpszShortPath:Cadena,cchBuffer:Entero):Entero,"kernel32" "GetShortPathNameA"
Proc GetDesktopWindow():Entero,"user32"
Proc WSAStartup(wVersionRequired:Entero,Referencia lpWSAData:WSAData):Entero,"ws2_32.dll"
Proc WSACleanup():Entero,"ws2_32.dll"
Proc WSAGetLastError():Entero,"ws2_32.dll"
Proc socket(AddressFamily,SocketType,Protocol:Entero):Entero,"ws2_32.dll"
Proc bind(s:Entero,Referencia addr:SOCKADDR,namelen:Entero):Entero,"ws2_32.dll"
Proc listen(,:Entero):Entero,"ws2_32.dll"
Proc accept(:Entero,Referencia:SOCKADDR,Referencia:Entero):Entero,"ws2_32.dll"
Proc connect(s:Entero,Referencia addr:SOCKADDR,namelen:Entero):Entero,"ws2_32.dll"
Proc send(s:Entero,bufptr:Entero,llen:Entero,flags:Entero):Entero,"ws2_32.dll"
Proc recv(s:Entero,bufptr:Entero,llen:Entero,flags:Entero):Entero,"ws2_32.dll"
Proc closesocket(s:Entero):Entero,"ws2_32.dll"
Proc inet_addr(Referencia cp:Cadena):Entero,"ws2_32.dll"
Proc gethostbyname(nombre:Cadena):Entero,"ws2_32.dll"
Proc htons (hostshort:Entero):Entero,"ws2_32.dll" 'U_SHORT
Proc CopyStrToBuff(lpDst:Entero,Referencia lpStr:Cadena):Entero,"Kernel32" "lstrcpy"
Proc CopyBuffToStr(Referencia lpDst:Cadena,lpSrc:Entero):Entero,"Kernel32" "lstrcpy"
Proc BuffLen(lpBuff:Entero):Entero,"Kernel32" "lstrlen"
Proc SetLayeredWindowAttributes(hwnd,crKey,bAlpha,dwFlags:Entero):Entero,"User32.dll" "SetLayeredWindowAttributes"
Proc keybd_event(bVk,bScan:Byte,dwFlags,dwExtraInfo:Entero),"User32.dll"
Proc ShowCursor(:Booleano):Entero,"User32.dll"
Proc SwapMouseButton(:Booleano):Booleano,"User32.dll"
Proc BlockInput(:Booleano):Booleano,"User32.dll"
Proc FindWindow(Referencia ,:Cadena):Entero,"User32.dll" "FindWindowA"
Proc WindowFromPoint(,:Entero):Entero,"User32.dll"
Proc GetClassName(:Entero,Referencia:Cadena,:Entero):Entero,"User32.dll" "GetClassNameA"
Proc SetActiveWindow(:Entero):Entero,"User32.dll"
Proc IsWindow(:Entero):Booleano,"User32.dll"
Proc IsWindowUnicode(:Entero):Booleano,"User32.dll"
Proc GetWindowThreadProcessId(:Entero,Referencia llpdwProcssId:Entero):Entero,"User32.dll"
Proc SendInput(,,:Entero):Entero, "User32.dll"
Proc FindWindowEx(hwndParent,hwndChildAfter:Entero,Referencia lpszClass,lpszWindow:Cadena):Entero,"User32.dll" "FindWindowExA"
Proc InternetGetConnectedState(IpdwFlags,dwReserved:Entero):Entero,"wininet.dll"
Proc InternetCloseHandle(HINTERNET:Entero):Booleano,"Wininet.dll"
Proc FtpCommand(hConnext:Entero,fExpectResponse:Booleano,dwFlags,lpszCommand,dwContext,phFtpCommand:Entero):Booleano,"Wininet.dll" "FtpCommandA"
Proc InternetConnect(HINTERNET:Entero,Referencia lpszServerName:Cadena,nServerPort:Entero,Referencia lpszUserName,lpszPassword:Cadena,dwService,dwFlags,dwContext:Entero):Entero,"Wininet.dll" "InternetConnectA"
Proc InternetOpen(Referencia lpszAgent:Cadena,dwAccessType:Entero,Referencia lpaszProxyName,lpszProxyBypass:Cadena,dwFlags:Entero):Entero,"Wininet.dll" "InternetOpenW"
Proc FtpCreateDirectory(hConnect:Entero,Referencia lpszDirectory:Cadena):Booleano,"Wininet.dll" "FtpCreateDirectoryA"
Proc FtpRemoveDirectory(hConnect:Entero,Referencia lpszDirectory:Cadena):Booleano,"Wininet.dll" "FtpRemoveDirectoryA"
Proc FtpOpenFile(hConnect:Entero,Referencia lpszFileName:Cadena,dwAccess,dwFlags,dwContext:Entero):Entero,"Wininet.dll" "FtpOpenFileA"
Proc InternetReadFile(hFile:Entero,Referencia lpBuffer:Cadena,dwNumberOfBytesToRead:Entero,Referencia lpdwNumberOfBytesRead:Entero):Booleano,"Wininet.dll"
Proc FtpPutFile(hConnet:Entero,Referencia lpszLocalFile,lpszNewRemoteFile:Cadena,dwFlags,dwContext:Entero):Booleano,"wininet.dll" "FtpPutFileA"
Proc FtpRenameFile(hConnect:Entero,Referencia lpszExisting,lpszNew:Cadena):Booleano,"Wininet.dll" "FtpRenameFileA"
Proc FtpGetFileSize(hFile:Entero,lpdwFileSizeHigh:Entero):Entero,"Wininet.dll" 
Proc FtpDeleteFile(hFtpSession:Entero,Referencia lpszFileName:Cadena):Booleano,"Wininet.dll" "FtpDeleteFileA"
Proc FtpGetFile(hConnect:Entero,Referencia lpszRemoteFile,lpszNewFile:Cadena,fFailIfExists,dwFlagsAndAttributes,dwFlags,dwContext:Entero):Booleano,"Wininet.dll" "FtpGetFileA"
Proc FtpFindFirstFile(hFtpSession:Entero,Referencia lpszSearchFile:Cadena,Referencia lpFindFileData:FTPInformaci$F3n,dwFlags,dwContent:Entero):Entero,"Wininet.dll" "FtpFindFirstFileA"
Proc InternetFindNextFile(hFind:Entero,Referencia lpvFindData:FTPInformaci$F3n):Booleano,"Wininet.dll" "InternetFindNextFileA"
Proc FtpGetCurrentDirectory(hConnect:Entero,Referencia lpszDirectory:Cadena,lpdwCurrentDirectory:Entero):Booleano,"Wininet.dll" "FtpGetCurrentDirectoryA"
Proc FtpSetCurrentDirectory(hConnect:Entero,Referencia lpszDirectory:Cadena):Booleano,"Wininet.dll" "FtpSetCurrentDirectoryA"
Proc GetPrivateProfileString(Referencia lpApplicationName,lpKeyName,lpDefault,lpReturnedString:Cadena,nSize:Entero,Referencia lpFileName:Cadena):Entero,"Kernel32.dll" "GetPrivateProfileStringA"
Proc WritePrivateProfileString(Referencia lpApplicationName,lpKeyName,lpString,lpFileName:Cadena):Entero,"Kernel32.dll" "WritePrivateProfileStringA"
Proc GetPrivateProfileSectionNames(Referencia lpszReturnBuffer:Cadena,nSize:Entero,Referencia lpFileName:Cadena):Entero,"Kernel32.dll" "GetPrivateProfileSectionNamesA"
Proc GetModuleFileName(,,:Entero):Entero,"Kernel32.dll" "GetModuleFileNameA"
Proc GetTempPath(,:Entero):Entero,"Kernel32.dll" "GetTempPathA"
Proc GetCommandLine():Entero,"Kernel32.dll" "GetCommandLineA"
Proc ShellExecute(:Entero,Referencia,,,:Cadena,:Entero):Entero,"Shell32.dll" "ShellExecuteA"
Proc SHGetSpecialFolderPath(,,:Entero,:Booleano):Booleano,"Shell32" "SHGetSpecialFolderPathA"
Proc SetLastError(dwErrCode:Entero),"Kernel32.dll"' "SetLastError"
Proc CreateMutex(lpMutexAttributes:Entero,bInitialOwner:Booleano,Referencia lpName:Cadena):Entero,"Kernel32.dll" "CreateMutexA"
Proc ReleaseMutex(hMutex:Entero):Booleano,"Kernel32.dll"
Proc CreateToolhelp32Snapshot(lFlags:Entero,lProcessID:Entero):Entero,"Kernel32.dll"
Proc ProcessFirst(hSnapShot:Entero,Referencia uProcess:PROCESSENTRY32):Entero,"Kernel32.dll" "Process32First"
Proc ProcessNext(hSnapShot:Entero,Referencia uProcess:PROCESSENTRY32):Entero,"Kernel32.dll" "Process32Next"
Proc SetPriorityClass(hProcess,dwPriorityClass:Entero):Booleano,"Kernel32.dll"
Proc GetPriorityClass(hProcess:Entero):Entero,"Kernel32.dll"
Proc TerminateProcess(hProcess,uExitCode:Entero):Entero,"Kernel32.dll"
Proc GetProcessId(Process:Entero):Entero,"Kernel32.dll"
Proc OpenProcess(:Entero,:Booleano,:Entero):Entero,"Kernel32.dll"
Proc GetCurrentProcess:Entero,"Kernel32.dll"' "GetCurrentProcess"
Proc GetCurrentProcessId:Entero,"Kernel32.dll"' "GetCurrentProcessId"
Proc GetCurrentThread:Entero,"Kernel32.dll"' "GetCurrentThread"
Proc RegEnumKeyEx(hKey:Entero,dwIndex:Entero,Referencia lpName:Cadena,Referencia lpcbName:Entero,lpReserverd:Entero,Referencia lpClass:Cadena,Referencia lpcbClass:Entero,Referencia lpftLastWriteTime:Entero):Entero,"Advapi32.dll" "RegEnumKeyExA"
Proc RegEnumValue(hKey:Entero,dwIndex:Entero,Referencia lpValueName:Cadena,Referencia lpcchValueName:Entero,lpReserved,lpType,lpData:Entero,Referencia lpcbData:Entero):Entero,"Advapi32.dll" "RegEnumValueA"
Proc RegOpenKey(hKey:Entero,Referencia lpSubKey:Cadena,ulOptions,samDesired:Entero,Referencia phkResult:Entero):Entero,"Advapi32.dll" "RegOpenKeyExA"
Proc RegCloseKey(hKey:Entero):Entero,"Advapi32.dll"
Proc RegCreateKey(hKey:Entero,Referencia lpSubKey:Cadena,Reserved:Entero,Referencia lpClass:Cadena,dwOptions:Entero,samDesired:Entero,Referencia lpSecurityAttributes:SECURITY_ATTRIBUTES_B,Referencia PhkResult:Entero,Referencia lpdwDisposition:Entero):Entero,"Advapi32.dll" "RegCreateKeyExA"
Proc RegDeleteValue(hKey:Entero,Referencia lpValueName:Cadena):Entero,"Advapi32.dll" "RegDeleteValueA"
Proc RegQueryValueEx(hKey:Entero,Referencia lpValueName:Cadena,lpReserved:Entero,Referencia lpType:Entero,Referencia lpData:Cadena,Referencia lpcbData:Entero):Entero,"Advapi32.dll" "RegQueryValueExA"
Proc RegQueryValueExEnt(hKey:Entero,Referencia lpValueName:Cadena,lpReserved:Entero,Referencia lpType:Entero,Referencia lpData:Entero,Referencia lpcbData:Entero):Entero,"Advapi32.dll" "RegQueryValueExA"
Proc RegSetValueEx(hKey:Entero,Referencia lpValueName:Cadena,Reserver:Entero,dwType:Entero,Referencia lpData:Cadena,cbData:Entero):Entero,"Advapi32.dll" "RegSetValueExA"
Proc RegSetValueExEnt(hKey:Entero,Referencia lpValueName:Cadena,Reserver:Entero,dwType:Entero,Referencia lpData:Entero,cbData:Entero):Entero,"Advapi32.dll" "RegSetValueExA"
Proc RegSetValueExReal(hKey:Entero,Referencia lpValueName:Cadena,Reserver:Entero,dwType:Entero,Referencia lpData:Real,cbData:Entero):Entero,"Advapi32.dll" "RegSetValueExA"
Proc CreateTimerQueue():Entero,"Kernel32.dll"
Proc CreateTimerQueueTimer(Referencia phNewTimer:Entero,TimerQueue:Entero,Callback:Entero,Parameter:Entero,DueTime:Entero,Period:Entero,Flags:Entero):Entero,"Kernel32.dll"
Proc DeleteTimerQueue(TimerQueue:Entero):Booleano,"Kernel32.dll"
Proc DeleteTimerQueueTimer(TimerQueue,Timer,CompletionEvent:Entero):Entero,"Kernel32.dll"

Proc SetProp(hWnd:Entero,PropNomb:Cadena,Valor:Entero)
	iSetProp(hWnd,PropNomb,Valor)
FinProc
Proc GetProp(hWnd:Entero,PropNomb:Cadena):Entero
	Devolver iGetProp(hWnd,PropNomb) 
FinProc
</Contenido></Datos>
